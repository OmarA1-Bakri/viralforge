version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: viralforge
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Node.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT:-5000}:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${DATABASE_PASSWORD:-postgres}@postgres:5432/viralforge
      - JWT_SECRET=${JWT_SECRET:-change-in-production}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - POSTHOG_API_KEY=${POSTHOG_API_KEY}
      - CREWAI_SCRIPT_PATH=server/agents/viral_crew.py
      - SERPER_API_KEY=${SERPER_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY}
      - YOUTUBE_CLIENT_ID=${YOUTUBE_CLIENT_ID}
      - YOUTUBE_CLIENT_SECRET=${YOUTUBE_CLIENT_SECRET}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./.cache:/app/.cache
      - ./logs:/app/logs

volumes:
  postgres_data:
