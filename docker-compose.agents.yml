version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  orchestrator:
    build: .
    command: tsx orchestrator/example-usage.ts
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - AGENT_CONCURRENCY=5
    depends_on:
      - redis
    volumes:
      - .:/app
      - /app/node_modules

  # Multiple agent workers for scaling
  agent-worker-1:
    build: .
    command: tsx orchestrator/worker.ts
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WORKER_ID=worker-1
      - AGENT_CONCURRENCY=3
    depends_on:
      - redis
      - orchestrator
    volumes:
      - .:/app
      - /app/node_modules

  agent-worker-2:
    build: .
    command: tsx orchestrator/worker.ts
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WORKER_ID=worker-2
      - AGENT_CONCURRENCY=3
    depends_on:
      - redis
      - orchestrator
    volumes:
      - .:/app
      - /app/node_modules

  agent-worker-3:
    build: .
    command: tsx orchestrator/worker.ts
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WORKER_ID=worker-3
      - AGENT_CONCURRENCY=3
    depends_on:
      - redis
      - orchestrator
    volumes:
      - .:/app
      - /app/node_modules

  # Optional: BullMQ Dashboard for monitoring
  bullmq-dashboard:
    image: deadly0/bull-board
    ports:
      - "3001:3000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis

volumes:
  redis_data: